rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Admin access - check email in multiple ways
    function isAdmin() {
      return request.auth != null && 
             (request.auth.token.email == 'hassyku786@gmail.com' ||
              request.auth.token.email == 'HASSYKU786@GMAIL.COM' ||
              request.auth.token.email == 'Hassyku786@gmail.com');
    }
    
    // Regular user access and admin access to users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && isAdmin();
      
      match /{subcollection=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Public categories
    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Cancellation requests
    match /cancellationRequests/{requestId} {
      // Users can create their own cancellation requests
      allow create: if request.auth != null && 
                      request.auth.uid == request.resource.data.userId;
      
      // Users can read their own requests, admins can read all
      allow read: if request.auth != null && 
                    (request.auth.uid == resource.data.userId || isAdmin());
      
      // Only admins can update/delete cancellation requests
      allow update, delete: if request.auth != null && isAdmin();
    }
    
    // TOTP secrets - users can only access their own
    match /user_totp/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow admin to read all TOTP data for debugging
      allow read: if request.auth != null && isAdmin();
      // Allow read access for any authenticated user during login (temporary)
      allow read: if request.auth != null;
    }
    
    // Email OTP - users can only access their own email OTPs
    match /email_otp/{email} {
      allow read, write: if request.auth != null && request.auth.token.email == email;
    }
    
    // Device sessions - users can only access their own device sessions
    match /device_sessions/{sessionId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Chat conversations - users can create and read their own conversations
    match /chat_conversations/{conversationId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && 
                    (request.auth.uid == resource.data.userId || isAdmin());
      allow update: if request.auth != null && 
                      (request.auth.uid == resource.data.userId || isAdmin());
    }
    
    // Chat messages - users can create messages in their conversations, admins can read all
    match /chat_messages/{messageId} {
      allow create: if request.auth != null && 
                      request.auth.uid == request.resource.data.senderId;
      allow read: if request.auth != null && 
                    (request.auth.uid == resource.data.senderId || 
                     request.auth.uid == resource.data.userId || 
                     isAdmin());
    }
    
    // Notifications - users can read their own notifications, admins can read all
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow read: if request.auth != null && isAdmin();
      allow create: if request.auth != null;
    }
    
    // Admin access to all collections for dashboard stats
    match /{document=**} {
      allow read: if request.auth != null && isAdmin();
      // TEMPORARILY ALLOW UNAUTHENTICATED ACCESS FOR DEBUGGING
      allow read: if true;
    }
    
  }
}
